# 금고털기
# 은행의 금고를 털기 위해 잠입한 도둑이 커다란 금고를 마주했다.
# 이 금고는 특수하게 만들어져서 시계방향으로 돌릴 때와 반시계방향으로 돌릴 때 소요되는 시간이 다르다.
# 재빠르게 금고를 털기 위한 최소 소요 시간을 구하여라.

# 4개의 비밀번호 금고 중
# 1번 비밀번호 자물쇠는 시계방향과 반시계방향 1눈금 이동하는 데에 1초
# 2번 비밀번호 자물쇠는 시계방향 1눈금 이동하는 데에 3초, 반시계방향은 2초
# 3번 비밀번호 자물쇠는 시계방향 1눈금 이동하는 데에 5초, 반시계방향은 4초
# 4번 비밀번호 자물쇠는 시계방향 1눈금 이동하는 데에 7초, 반시계방향은 6초
# 초기 비밀번호와 정답 비밀번호가 주어졌을 때 맞춰지는 데 필요한 최소 소요 시간을 구하시오.


# [예제 풀이]
# 초기비밀번호가 'FDSA'고 정답 비밀번호가  'JATY'이면
# 1번 비밀번호 좌물쇠 ‘F’ 를 ‘J’까지 반시계 방향으로 이동시키는 것이 더 빠르므로 4칸 이동하여 4초가 소요되고,
# 2번 비밀번호 자물쇠 ‘D’ 를 ‘A’까지 시계 방향으로 이동시키는 것이 더 빠르므로 3칸 이동하여 9초가 소요된다.
# 3번 비밀번호 자물쇠 ‘S’ 는 ‘T’까지 반시계 방향으로 이동시키는 것이 더 빠르므로 1칸 이동하여 4초가 소요되고,
# 4번 비밀번호 자물쇠 ‘A’ 는 ‘Y’까지 시계 방향으로 이동시키는 것이 더 빠르므로 2칸 이동하여 14초가 소요된다.
# 총 최소시간 4+9+4+14 = 31초가 소요되므로 정답은 31초 이다.


# 입력 ex)
# 첫 번째 줄에 테스트 케이스의 수 TC가 주어진다. 이후 TC개의 테스트 케이스가 새 줄로 구분되어 주어진다. 각 테스트 케이스는 다음과 같이 구성되었다.
#  - 첫 번째 줄에 초기 4자리 알파벳이 주어진다.
#  - 두 번째 줄에 정답 4자리 알파벳이 주어진다.
# - 입력 알파벳은 모두 대문자 이다.


# 출력 ex)
# 각 테스트 케이스마다
#  - 소요된 시간을 출력한다.


for t in range(1, int(input())+1):
    start, end = input(), input()
    c = [1, 3, 5, 7]
    rev_c = [1, 2, 4, 6]
    result = 0
    for i in range(4):
        v = ord(end[i]) - ord(start[i])
        result += min((26-v)*c[i], v*rev_c[i]) if v >= 0 else min((26-v*-1)*rev_c[i], v*-1*c[i])

    print('#%d %d' % (t, result))