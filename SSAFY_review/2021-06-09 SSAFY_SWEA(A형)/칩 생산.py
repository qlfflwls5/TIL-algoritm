# 칩 생산
# 삼성전자에서 새로운 반도체 물질을 발견하고, 이 반도체 물질을 가공하여 칩으로 생산할 때 칩 성능이 크게 향상되는 것을 확인하였다.
# 새로운 반도체 물질을 직사각형 모양의 웨이퍼로 가공하고 해당 웨이퍼에서 칩 생산을 하기로 하였다.
# 신규 웨이퍼 가공 공정의 도입으로 인해 웨이퍼 중간 중간에 칩으로 사용 불가능한 영역이 발생하여 이를 제외하고 나머지 영역에서 칩을 생산해야 한다.
# 하나의 칩을 생산하기 위해서는 웨이퍼에서 2*2 영역이 필요하다.
# 웨이퍼의 세로길이(H), 가로길이(W)와 웨이퍼 정보가 주어질 때 최대 생산 가능한 칩의 개수를 출력하는 프로그램을 작성하라.


# [제약 사항]
# 1. 웨이퍼의 정보는 직사각형(정사각형 포함) 형태로 주어진다.
# 2. 세로길이 H는 5 이상 10 이하이다.(5 ≤ H ≤ 10)
# 3. 가로길이 W 는 5 이상 25 이하이다. (5 ≤ W ≤ 25)
# 4. 칩으로 가공 가능한 영역은 0 으로, 가공 불가능한 영역은 1 로 주어진다.


# [입력]
# 입력의 가장 첫 줄에는 총 테스트 케이스의 개수 T가 주어진다.
# 그 다음 줄부터는 각 테스트 케이스가 주어지며 각 테스트 케이스의 첫째 줄에는 세로길이 H, 가로길이 W 가 주어진다.
# 다음 H 개의 줄에는 각 줄마다 W 개의 웨이퍼 정보가 주어진다. 0 은 가공 가능한 영역이고, 1 은 가공 불가능한 영역이다.


# [출력]
# 테스트 케이스 T에 대한 결과는 “#T”을 찍고, 한 칸 띄고, 최대 생산 가능한 칩의 개수를 출력한다. ( T는 테스트케이스의 번호를 의미하며 1부터 시작한다.)


# 라이브 - 재귀 설계(백트래킹)
# 1. 트리 형태로 설계한다. -> H-2, W-2까지의 각 격자판에 번호를 붙이고(stage) 0번부터 설치/설치x의 트리를 따지기 -> branch수, level 수를 명확하게
#    H-2, W-2 까지만 붙이는 이유는 stage를 2x2 격자판의 왼쪽 위 꼭지점으로 볼 것이므로
#    왼쪽 위 꼭지점은 2, 나머지 칸에는 1을 채울 것
# 2. 가지치기를 찾아본다. -> used(visitied)배열을 이용, 한 stage를 선택하면 2x2 범위만큼을 used로 만들기
# 3. DP 요소 발굴 -> N번째 줄부터 맨 아래까지의 최대 개수를 구해놨다면, 그 값을 저장하고 0~N-1번째 줄까지만 구하고 저장한 값을 더하는 식으로 DP 사용 가능
#    즉, DP에서의 기본이 되는 top-down에서 이 문제는 맨 아래줄부터 채우는 것이 top(나중에 쌓게 되는 것)이 된다.
# 4. DP를 맨 아래줄부터 쌓는다고 하였으니, 이 문제에서 격자판을 90도 회전시켜 세로가 최대 25, 가로가 최대 10이 되게 만든다.(세로가 25이므로 겹칠 확률이 올라간다.)
# 5. DP에는 비트연산이 많이 쓰인다. 연습해 놓자.
for t in range(1, int(input())+1):
    H, W = map(int, input().split())
    arr = [list(map(int, input().split())) for _ in range(H)]
    for row in arr:
        print(row)