# 조교의 성적 매기기
# 학기가 끝나고, 학생들의 점수로 학점을 계산중이다.
# 학점은 상대평가로 주어지는데, 총 10개의 평점이 있다.
# grade = ['D0', 'C-', 'C0', 'C+', 'B-', 'B0', 'B+', 'A-', 'A0', 'A+']
# 학점은 학생들이 응시한 중간/기말고사 점수 결과 및 과제 점수가 반영한다.
# 각각 아래 비율로 반영된다.

# 총점 = 중간고사(35%) + 기말고사(45%) + 과제(20%)

# 10 개의 평점을 총점이 높은 순서대로 부여하는데,
# 각각의 평점은 같은 비율로 부여할 수 있다.

# 예를 들어, N 명의 학생이 있을 경우 N/10 명의 학생들에게 동일한 평점을 부여할 수 있다.
# 입력으로 각각의 학생들의 중간, 기말, 과제 점수가 주어지고,
# 학점을 알고싶은 K 번째 학생의 번호가 주어졌을 때,
# K 번째 학생의 학점을 출력하는 프로그램을 작성하라.


# [제약사항]
# 1. N은 항상 10의 배수이며, 10이상 100이하의 정수이다. (10 ≤ N ≤ 100)
# 2. K는 1 이상 N 이하의 정수이다. (1 ≤ K ≤ N)
# 3. K 번째 학생의 총점과 다른 학생의 총점이 동일한 경우는 입력으로 주어지지 않는다.


# [입력]
# 입력은 첫 줄에 총 테스트 케이스의 개수 T가 온다.
# 다음 줄부터 각 테스트 케이스가 주어진다.
# 테스트 케이스의 첫 번째 줄은 학생수 N 과, 학점을 알고싶은 학생의 번호 K 가 주어진다.
# 테스트 케이스 두 번째 줄 부터 각각의 학생이 받은 시험 및 과제 점수가 주어진다.


# [출력]
# 테스트 케이스 t에 대한 결과는 “#t”을 찍고, 한 칸 띄고, 정답을 출력한다.
# (t는 테스트 케이스의 번호를 의미하며 1부터 시작한다.)


import sys


def get_total(arr):
    total = (arr[0]*35 + arr[1]*45 + arr[2]*20)/100
    return total


sys.stdin = open('1983_input.txt')
grade = ['A+', 'A0', 'A-', 'B+', 'B0', 'B-', 'C+', 'C0', 'C-', 'D0']
T = int(input())
for t in range(1, T+1):
    N, K = map(int, input().split())
    total_list = []
    for i in range(1, N+1):
        # 총점 리스트를 만든다.
        total_list += [get_total(list(map(int, input().split())))]

    # K번째 학생의 총점을 저장해놓는다.
    K_score = total_list[K-1]

    # 버블정렬을 통해서 총점 리스트를 내림차순으로 정렬한다.
    for i in range(len(total_list)-1, 0, -1):
        for j in range(i):
            if total_list[j] < total_list[j+1]:
                total_list[j], total_list[j+1] = total_list[j+1], total_list[j]

    # 저장해뒀던 K번째 학생의 총점이 몇 번째 있는지를 구해 어느 성적 구간에 드는지 확인한다.
    for i in range(len(total_list)):
        if total_list[i] == K_score:
            result = grade[i // (N//10)]

    print('#%d %s' %(t, result))

